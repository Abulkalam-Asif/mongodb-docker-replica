name: Deploy MongoDB ReplicaSet to VPS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to VPS
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOF'
            # Git clone or pull
            if [ -d mongodb-docker-replica/.git ]; then
              cd mongodb-docker-replica
              git pull origin main
            else
              sudo rm -rf mongodb-docker-replica
              git clone https://github.com/Abulkalam-Asif/mongodb-docker-replica.git
              cd mongodb-docker-replica
            fi

            # Create key file (not folder!)
            if [ ! -f mongo-keyfile ]; then
              openssl rand -base64 756 > mongo-keyfile
              chmod 400 mongo-keyfile
              chown 999:999 mongo-keyfile
            fi

            # Stop existing containers
            docker compose down || true

            # Start MongoDB replica containers
            docker compose up -d --build

            # Wait for containers to become ready
            sleep 10

            # Check replica set status
            rs_status=$(docker exec mongo1 mongosh -u admin -p supersecret --authenticationDatabase admin --eval "rs.status()" | grep 'not yet initialized')

            if [[ ! -z "$rs_status" ]]; then
              docker exec mongo1 mongosh -u admin -p supersecret --authenticationDatabase admin --eval '
                rs.initiate({
                  _id: "rs0",
                  members: [
                    { _id: 0, host: "mongo1:27017" },
                    { _id: 1, host: "mongo2:27017" },
                    { _id: 2, host: "mongo3:27017" }
                  ]
                });
              '
            fi

            # Restart containers just to be sure
            docker restart mongo1 mongo2 mongo3

            # Show replica set status
            docker exec mongo1 mongosh -u admin -p supersecret --authenticationDatabase admin --eval "rs.status()"
          EOF
