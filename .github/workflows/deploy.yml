name: Deploy MongoDB ReplicaSet to VPS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to VPS
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOF'
            set -e

            echo "üîÑ Updating repository..."
            if [ -d mongodb-docker-replica/.git ]; then
              cd mongodb-docker-replica
              git pull origin main
            else
              sudo rm -rf mongodb-docker-replica
              git clone https://github.com/Abulkalam-Asif/mongodb-docker-replica.git
              cd mongodb-docker-replica
            fi

            echo "üßº Cleaning up Docker system..."
            docker compose down -v || true
            docker system prune -af --volumes || true

            echo "üîë Ensuring keyfile exists with correct permissions..."
            if [ ! -f mongo-keyfile ]; then
              openssl rand -base64 756 > mongo-keyfile
            fi

            chmod 400 mongo-keyfile
            sudo chown 999:999 mongo-keyfile

            echo "üì¶ Setting environment variables..."
            export MONGO_INITDB_ROOT_USERNAME=admin
            export MONGO_INITDB_ROOT_PASSWORD=supersecret
            export REPLICA_SET_NAME=rs0

            echo "üöÄ Starting MongoDB replica containers..."
            docker compose up -d --build

            echo "‚è≥ Waiting for containers to be ready..."
            sleep 10

            echo "üîç Checking replica set initialization..."
            is_initialized=$(docker exec mongo1 mongosh -u admin -p supersecret --authenticationDatabase admin --quiet --eval "rs.status().ok" || echo "0")
            if [[ "$is_initialized" != "1" ]]; then
              echo "‚öôÔ∏è Initializing replica set..."
              docker exec mongo1 mongosh -u admin -p supersecret --authenticationDatabase admin --eval '
                rs.initiate({
                  _id: "rs0",
                  members: [
                    { _id: 0, host: "mongo1:27017" },
                    { _id: 1, host: "mongo2:27017" },
                    { _id: 2, host: "mongo3:27017" }
                  ]
                });
              '
              sleep 5
            fi

            echo "üìä Replica set status:"
            docker exec mongo1 mongosh -u admin -p supersecret --authenticationDatabase admin --eval "rs.status()"
          EOF
