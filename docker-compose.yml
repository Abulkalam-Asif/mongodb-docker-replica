version: '3'
services:
  mongo1:
    image: mongo:6
    container_name: mongo1
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    command: >
      mongod --replSet ${REPLICA_SET_NAME}
             --auth
             --keyFile /etc/mongo-keyfile
    volumes:
      - ./mongo-keyfile:/etc/mongo-keyfile:ro
    ports:
      - "27017:27017"  # Exposing port 27017 for mongo1

  mongo2:
    image: mongo:6
    container_name: mongo2
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    command: >
      mongod --replSet ${REPLICA_SET_NAME}
             --auth
             --keyFile /etc/mongo-keyfile
    volumes:
      - ./mongo-keyfile:/etc/mongo-keyfile:ro
    ports:
      - "27018:27017"  # Exposing port 27018 for mongo2

  mongo3:
    image: mongo:6
    container_name: mongo3
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    command: >
      mongod --replSet ${REPLICA_SET_NAME}
             --auth
             --keyFile /etc/mongo-keyfile
    volumes:
      - ./mongo-keyfile:/etc/mongo-keyfile:ro
    ports:
      - "27019:27017"  # Exposing port 27019 for mongo3

  # Backup service to take periodic backups of the MongoDB replica set
  backup:
    image: mongo:6
    container_name: mongo_backup
    entrypoint: ["sh", "-c", "while true; do mongodump --uri='mongodb://admin:supersecret@mongo1:27017,mongo2:27018,mongo3:27019/?replicaSet=rs0' --out /backup/$(date +%F); sleep 86400; done"]
    volumes:
      - ./backups:/backup  # Mount the host machine's backup directory to the container
    restart: always
    networks:
      - mongo_network

networks:
  mongo_network:
    driver: bridge
